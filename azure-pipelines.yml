# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ade09b46-79c2-4657-b712-24004059df6c'
  imageRepository: 'flyingdutchmanproofofconceptbg'
  containerRegistry: 'myacrwebapp.azurecr.io'
  dockerfilePathCa: '$(Build.SourcesDirectory)/calc-engine/Dockerfile'
  dockerfilePathFe: '$(Build.SourcesDirectory)/dash-fe/Dockerfile'
  dockerfilePathGr: '$(Build.SourcesDirectory)/graphql/Dockerfile'
  dockerfilePathSe: '$(Build.SourcesDirectory)/storage-engine/Dockerfile'
  tagCa: '103-$(System.TeamProject)-$(Build.SourceBranchName)-ca'
  tagFe: '103-$(System.TeamProject)-$(Build.SourceBranchName)-fe'
  tagGr: '103-$(System.TeamProject)-$(Build.SourceBranchName)-gr'
  tagSe: '103-$(System.TeamProject)-$(Build.SourceBranchName)-se'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: BuildAndPushCa
    displayName: Build and push calc-engine
    pool: mycomputeragent
    steps:
    - task: Docker@2
      displayName: Build and push calc-engine image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePathCa)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tagCa)
  - job: BuildAndPushFe
    displayName: Build and push dash-fe
    pool: mycomputeragent
    steps:
    - task: Docker@2
      displayName: Build and push dash-fe image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePathFe)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tagFe)
  - job: BuildAndPushGr
    displayName: Build and push graphql
    pool: mycomputeragent
    steps:
    - task: Docker@2
      displayName: Build and push graphql image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePathGr)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tagGr)
  - job: BuildAndPushSe
    displayName: Build and push selenium
    pool: mycomputeragent
    steps:
    - task: Docker@2
      displayName: Build and push selenium image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePathSe)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tagSe)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: k8sexampleacrauth
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool: mycomputeragent
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@1
        inputs:
          action: 'deploy'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: 'my-aks-connection'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml